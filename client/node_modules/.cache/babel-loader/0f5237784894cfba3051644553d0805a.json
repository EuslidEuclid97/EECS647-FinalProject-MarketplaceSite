{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zacka\\\\OneDrive\\\\Documents\\\\eecs647-project\\\\EECS647-FinalProject-MarketplaceSite\\\\src\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [users, setUsers] = useState(); //temporary til we get connected to a db\n\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [isPending, setIsPending] = useState(false);\n  /*useEffect(() => {//outline for useEffect which returns queries? Should be in Search.js too\r\n      fetch('http://localhost:8000/users')\r\n      .then(res => {\r\n          return res.json()\r\n      })\r\n      .then(data =>{\r\n          console.log(data)\r\n      }\r\n      )\r\n  }, [])*/\n\n  const handleSignIn = e => {\n    e.preventDefault();\n    setIsPending(true);\n    const user = {\n      username,\n      password\n    };\n    var found = 0;\n    console.log(\"User will be signed in if pword and username is correct\"); //will take in text from credentials field and compare to users array\n\n    fetch('http://localhost:8000/users', {\n      method: 'GET',\n      headers: {\n        'Content Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    }).then(response => response.json());\n    setUsers(response);\n    {\n      users && users.map(user => {\n        if (user.password === password || user.username === username) {\n          if (!found) {\n            //pop up\n            console.log(\"Username or password is already taken\");\n            found = 1;\n          }\n        }\n      });\n    }\n\n    if (found) {//sign user in somehow, maybe by using route id\n    }\n  };\n\n  const handleSignUp = e => {\n    e.preventDefault();\n    setIsPending(true);\n    const user = {\n      username,\n      password\n    };\n    var found = 0;\n    console.log(\"User will be signed in if pword and username is correct\"); //will take in text from credentials field and compare to users array\n\n    fetch('http://localhost:8000/users', {\n      method: 'GET',\n      headers: {\n        'Content Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    }).then(response => response.json()).then(data => {\n      setUsers(data);\n    });\n    {\n      users && users.map(user => {\n        //probably need to change this\n        if (user.password === password || user.username === username) {\n          if (!found) {\n            //pop up\n            console.log(\"Username or password is already taken\");\n            found = 1;\n          }\n        }\n      });\n    }\n\n    if (!found) {\n      fetch('http://localhost:8000/users', {\n        method: 'POST',\n        headers: {\n          'Content Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n      }).then(() => {\n        console.log(\"New user added\"); //maybe display something here\n\n        setIsPending(false);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign In Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSignIn,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), !isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 32\n      }, this), isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        children: \"Adding user...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSignUp,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), !isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 32\n      }, this), isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        children: \"Adding user...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"7b7fKn7+9UEkm1UoHlTbYwFLJOo=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/zacka/OneDrive/Documents/eecs647-project/EECS647-FinalProject-MarketplaceSite/src/Home.js"],"names":["useEffect","useState","Home","users","setUsers","password","setPassword","username","setUsername","isPending","setIsPending","handleSignIn","e","preventDefault","user","found","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","map","handleSignUp","data","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst Home = () => {\r\n    const [users, setUsers] = useState()//temporary til we get connected to a db\r\n\r\n    const[password, setPassword] = useState('')\r\n    const[username, setUsername] = useState('')\r\n    const[isPending, setIsPending] = useState(false)\r\n\r\n    /*useEffect(() => {//outline for useEffect which returns queries? Should be in Search.js too\r\n        fetch('http://localhost:8000/users')\r\n        .then(res => {\r\n            return res.json()\r\n        })\r\n        .then(data =>{\r\n            console.log(data)\r\n        }\r\n        )\r\n    }, [])*/\r\n    \r\n    const handleSignIn = (e) => {\r\n        e.preventDefault();\r\n        setIsPending(true)\r\n        const user = {username, password}\r\n        var found = 0;\r\n        console.log(\"User will be signed in if pword and username is correct\");\r\n        //will take in text from credentials field and compare to users array\r\n        fetch('http://localhost:8000/users', {\r\n            method: 'GET', \r\n            headers: {'Content Type': 'application/json'},\r\n            body: JSON.stringify(user)\r\n        }).then(response => response.json())\r\n        setUsers(response)\r\n        {users && users.map((user) => {\r\n            if(user.password === password || user.username === username){\r\n                if(!found){\r\n                    //pop up\r\n                    console.log(\"Username or password is already taken\")\r\n                    found = 1;\r\n                }\r\n            }\r\n        })}\r\n        if(found){\r\n            //sign user in somehow, maybe by using route id\r\n        }\r\n}\r\n\r\n    const handleSignUp = (e) => {\r\n        e.preventDefault();\r\n        setIsPending(true)\r\n        const user = {username, password}\r\n        var found = 0;\r\n        console.log(\"User will be signed in if pword and username is correct\");\r\n        //will take in text from credentials field and compare to users array\r\n        fetch('http://localhost:8000/users', {\r\n            method: 'GET', \r\n            headers: {'Content Type': 'application/json'},\r\n            body: JSON.stringify(user)\r\n        }).then(response => response.json())\r\n        .then((data) => {setUsers(data)})\r\n        {users && users.map((user) => {//probably need to change this\r\n            if(user.password === password || user.username === username){\r\n                if(!found){\r\n                    //pop up\r\n                    console.log(\"Username or password is already taken\")\r\n                    found = 1;\r\n                }\r\n            }\r\n        })}\r\n        if(!found){\r\n            fetch('http://localhost:8000/users', {\r\n            method: 'POST', \r\n            headers: {'Content Type': 'application/json'},\r\n            body: JSON.stringify(user)\r\n        }).then(() => {\r\n            console.log(\"New user added\")//maybe display something here\r\n            setIsPending(false)\r\n        })\r\n        }\r\n    }\r\n\r\n    return (  \r\n        <div className=\"home\">\r\n            <h2>Sign In Page</h2>\r\n            <form onSubmit = {handleSignIn}>\r\n                <label>Username</label>\r\n                <input \r\n                    type = \"text\"\r\n                    required\r\n                    value = {username}\r\n                    onChange = {(e) => setUsername(e.target.value)}\r\n                >\r\n                </input>\r\n                <label>Password</label>\r\n                <input \r\n                    type = \"text\"\r\n                    required\r\n                    value = {password}\r\n                    onChange = {(e) => setPassword(e.target.value)}\r\n                >\r\n                </input>\r\n                {!isPending && <button>Sign In</button>}\r\n                {isPending && <button disabled>Adding user...</button>}\r\n            </form>\r\n            <form onSubmit = {handleSignUp}>\r\n                <label>Username</label>\r\n                <input \r\n                    type = \"text\"\r\n                    required\r\n                    value = {username}\r\n                    onChange = {(e) => setUsername(e.target.value)}\r\n                >\r\n                </input>\r\n                <label>Password</label>\r\n                <input \r\n                    type = \"text\"\r\n                    required\r\n                    value = {password}\r\n                    onChange = {(e) => setPassword(e.target.value)}\r\n                >\r\n                </input>\r\n                {!isPending && <button>Sign Up</button>}\r\n                {isPending && <button disabled>Adding user...</button>}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Home;"]},"metadata":{},"sourceType":"module"}
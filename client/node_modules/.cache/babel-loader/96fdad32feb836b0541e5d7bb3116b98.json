{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zacka\\\\OneDrive\\\\Documents\\\\eecs647-project\\\\EECS647-FinalProject-MarketplaceSite\\\\client\\\\src\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [users, setUsers] = useState(null); //temporary til we get connected to a db\n\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [newUsername, setNewUsername] = useState('');\n  const [isPending, setIsPending] = useState(false);\n  const history = useNavigate(); //const location = useLocation()\n\n  useEffect(() => {//collects all current account for later comparison\n\n    /*Axios.get('http://localhost:3001/', \r\n        {Username: username, Password: password}).then(() => {\r\n            console.log()\r\n        })*/\n  }, []);\n\n  const handleSignIn = e => {\n    e.preventDefault();\n    setIsPending(true);\n    var foundUsername = 0;\n    var redirectRoute = \"\";\n    console.log(\"Should be all users\", users);\n    const user = {\n      username,\n      password\n    };\n    var found = 0;\n    console.log(\"User will be signed in if pword and username is correct\"); //will take in text from credentials field and compare to users array\n\n    {\n      users && users.map(oneUser => {\n        //console.log(\"Should be single user's credentials in db\", oneUser.password, oneUser.username)\n        //console.log(\"Should be new user credentials\", user.username, user.password)\n        if (password === oneUser.password || username === oneUser.username) {\n          foundUsername = oneUser.username;\n\n          if (!found) {\n            found = 1;\n          }\n        }\n      });\n    }\n\n    if (found) {\n      //needs route change\n      //console.log(users);\n      setIsPending(false);\n      found = 0;\n      history(\"Accounts/\" + foundUsername);\n    } else {\n      found = 0;\n      alert(\"Username or password is incorrect\");\n    }\n  };\n\n  const handleSignUp = e => {\n    e.preventDefault();\n    setIsPending(true);\n    const user = {\n      username,\n      password\n    };\n    var found = 0;\n    /*{users && users.map((oneUser) => {\r\n        //console.log(\"Should be single user in db\", oneUser)\r\n        //console.log(\"Should be new user\", user)\r\n        if(newPassword === oneUser.password || newUsername === oneUser.username){\r\n            if(!found){\r\n                //pop up\r\n                alert(\"Username or password is already taken\")\r\n                found = 1;\r\n            }\r\n        }\r\n    })}*/\n    //console.log(users)\n    //if(!found){\n\n    user.username = newUsername;\n    user.password = newPassword;\n    Axios.post('http://localhost:3001/', {\n      Username: username,\n      Password: password\n    }).then(() => {\n      alert(\"Account added\");\n    });\n    /*fetch('http://localhost:8000/users').then(response => response.json()).then(data => {\r\n    setUsers(data);//seems to be a problem with new users not being registered?    \r\n    })*/\n    //}\n\n    found = 0;\n    setIsPending(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSignUp,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          value: newUsername,\n          onChange: e => setNewUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), !isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"signButton\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 32\n        }, this), isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: true,\n          children: \"Adding user...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSignIn,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this), !isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"signButton\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 32\n        }, this), isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: true,\n          children: \"Adding user...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"dcw05WbLV2/xM2n94M1uJ4a7L3o=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/zacka/OneDrive/Documents/eecs647-project/EECS647-FinalProject-MarketplaceSite/client/src/Home.js"],"names":["useEffect","useState","Navigate","useNavigate","Axios","Home","users","setUsers","password","setPassword","username","setUsername","newPassword","setNewPassword","newUsername","setNewUsername","isPending","setIsPending","history","handleSignIn","e","preventDefault","foundUsername","redirectRoute","console","log","user","found","map","oneUser","alert","handleSignUp","post","Username","Password","then","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport Axios from \"axios\"\r\n\r\nconst Home = () => {\r\n    const [users, setUsers] = useState(null)//temporary til we get connected to a db\r\n\r\n    const[password, setPassword] = useState('')\r\n    const[username, setUsername] = useState('')\r\n    const[newPassword, setNewPassword] = useState('')\r\n    const[newUsername, setNewUsername] = useState('')\r\n    const[isPending, setIsPending] = useState(false)\r\n\r\n    const history = useNavigate()\r\n    //const location = useLocation()\r\n    \r\n    useEffect(() => {//collects all current account for later comparison\r\n        /*Axios.get('http://localhost:3001/', \r\n            {Username: username, Password: password}).then(() => {\r\n                console.log()\r\n            })*/\r\n    }, [])\r\n    \r\n    const handleSignIn = (e) => {\r\n        e.preventDefault();\r\n        setIsPending(true)\r\n        var foundUsername = 0;\r\n        var redirectRoute = \"\"\r\n        console.log(\"Should be all users\", users)\r\n        const user = {username, password}\r\n        var found = 0;\r\n        console.log(\"User will be signed in if pword and username is correct\");\r\n        //will take in text from credentials field and compare to users array\r\n        {users && users.map((oneUser) => {\r\n            //console.log(\"Should be single user's credentials in db\", oneUser.password, oneUser.username)\r\n            //console.log(\"Should be new user credentials\", user.username, user.password)\r\n            if(password === oneUser.password || username === oneUser.username){\r\n                foundUsername = oneUser.username\r\n                if(!found){\r\n                    found = 1;\r\n                }\r\n            }\r\n        })}\r\n        if(found){//needs route change\r\n            //console.log(users);\r\n            setIsPending(false)\r\n            found = 0;\r\n            history(\"Accounts/\" + foundUsername)\r\n        }\r\n        else{\r\n            found = 0;\r\n            alert(\"Username or password is incorrect\")\r\n        }\r\n}\r\n\r\n    const handleSignUp = (e) => {\r\n        e.preventDefault();\r\n        setIsPending(true)\r\n        const user = {username, password}\r\n        var found = 0;\r\n        /*{users && users.map((oneUser) => {\r\n            //console.log(\"Should be single user in db\", oneUser)\r\n            //console.log(\"Should be new user\", user)\r\n            if(newPassword === oneUser.password || newUsername === oneUser.username){\r\n                if(!found){\r\n                    //pop up\r\n                    alert(\"Username or password is already taken\")\r\n                    found = 1;\r\n                }\r\n            }\r\n        })}*/\r\n        //console.log(users)\r\n        //if(!found){\r\n            user.username = newUsername\r\n            user.password = newPassword\r\n            Axios.post('http://localhost:3001/', \r\n            {Username: username, Password: password}).then(() => {\r\n                alert(\"Account added\")\r\n            })\r\n            /*fetch('http://localhost:8000/users').then(response => response.json()).then(data => {\r\n            setUsers(data);//seems to be a problem with new users not being registered?    \r\n        })*/\r\n        //}\r\n        found = 0;\r\n        setIsPending(false)\r\n    }\r\n\r\n    return (  \r\n        <div className=\"home\">\r\n            <div>\r\n            <form onSubmit = {handleSignUp}>\r\n                <h2>Sign Up</h2>\r\n                <label>Username</label>\r\n                <input \r\n                    type = \"text\"\r\n                    required\r\n                    value = {newUsername}\r\n                    onChange = {(e) => setNewUsername(e.target.value)}\r\n                >\r\n                </input>\r\n                <label>Password</label>\r\n                <input \r\n                    type = \"text\"\r\n                    required\r\n                    value = {newPassword}\r\n                    onChange = {(e) => setNewPassword(e.target.value)}\r\n                >\r\n                </input>\r\n                {!isPending && <button className=\"signButton\">Sign Up</button>}\r\n                {isPending && <button disabled>Adding user...</button>}\r\n            </form>\r\n            </div>\r\n            <div>\r\n            <form onSubmit = {handleSignIn}>\r\n                <h2>Sign In</h2>\r\n                <label>Username</label>\r\n                <input \r\n                    type = \"text\"\r\n                    required\r\n                    value = {username}\r\n                    onChange = {(e) => setUsername(e.target.value)}\r\n                >\r\n                </input>\r\n                <label>Password</label>\r\n                <input \r\n                    type = \"text\"\r\n                    required\r\n                    value = {password}\r\n                    onChange = {(e) => setPassword(e.target.value)}\r\n                >\r\n                </input>\r\n                {!isPending && <button className=\"signButton\">Sign In</button>}\r\n                {isPending && <button disabled>Adding user...</button>}\r\n            </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Home;"]},"metadata":{},"sourceType":"module"}
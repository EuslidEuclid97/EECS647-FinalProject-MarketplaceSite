{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zacka\\\\OneDrive\\\\Documents\\\\eecs647-project\\\\EECS647-FinalProject-MarketplaceSite\\\\src\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [users, setUsers] = useState(null); //temporary til we get connected to a db\n\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [newUsername, setNewUsername] = useState('');\n  const [isPending, setIsPending] = useState(false);\n  const history = useNavigate();\n  useEffect(() => {\n    //collects all current account for later comparison\n    fetch('http://localhost:8000/users').then(response => response.json()).then(data => {\n      setUsers(data);\n    });\n  }, []);\n\n  const handleSignIn = e => {\n    e.preventDefault();\n    setIsPending(true);\n    var foundId = 0;\n    var redirectRoute = \"\";\n    console.log(\"Should be all users\", users);\n    const user = {\n      username,\n      password\n    };\n    var found = 0;\n    console.log(\"User will be signed in if pword and username is correct\"); //will take in text from credentials field and compare to users array\n\n    {\n      users && users.map(oneUser => {\n        console.log(\"Should be single user's credentials in db\", oneUser.password, oneUser.username);\n        console.log(\"Should be new user credentials\", user.username, user.password);\n\n        if (password === oneUser.password || username === oneUser.username) {\n          foundId = oneUser.id;\n\n          if (!found) {\n            found = 1;\n          }\n        }\n      });\n    }\n\n    if (found) {\n      //needs route change\n      console.log(users);\n      redirectRoute = redirectRoute + foundId; //return(<Navigate replace to = {redirectRoute}/>)\n    } else {\n      alert(\"Username or password is incorrect\");\n    }\n\n    found = 0;\n    setIsPending(false);\n  };\n\n  const handleSignUp = e => {\n    e.preventDefault();\n    setIsPending(true);\n    const user = {\n      username,\n      password\n    };\n    var found = 0;\n    {\n      users && users.map(oneUser => {\n        //console.log(\"Should be single user in db\", oneUser)\n        //console.log(\"Should be new user\", user)\n        if (newPassword === oneUser.password || newUsername === oneUser.username) {\n          if (!found) {\n            //pop up\n            alert(\"Username or password is already taken\");\n            found = 1;\n          }\n        }\n      });\n    } //console.log(users)\n\n    if (!found) {\n      user.username = newUsername;\n      user.password = newPassword;\n      fetch('http://localhost:8000/users', {\n        method: 'POST',\n        body: JSON.stringify(user),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(() => {\n        console.log(users); //maybe display something here\n      });\n      fetch('http://localhost:8000/users').then(response => response.json()).then(data => {\n        setUsers(data); //seems to be a problem with new users not being registered?    \n      });\n    }\n\n    found = 0;\n    setIsPending(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign In Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSignUp,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: newUsername,\n        onChange: e => setNewUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), !isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 32\n      }, this), isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        children: \"Adding user...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSignIn,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), !isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 32\n      }, this), isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        children: \"Adding user...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"dcw05WbLV2/xM2n94M1uJ4a7L3o=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/zacka/OneDrive/Documents/eecs647-project/EECS647-FinalProject-MarketplaceSite/src/Home.js"],"names":["useEffect","useState","Navigate","useNavigate","Home","users","setUsers","password","setPassword","username","setUsername","newPassword","setNewPassword","newUsername","setNewUsername","isPending","setIsPending","history","fetch","then","response","json","data","handleSignIn","e","preventDefault","foundId","redirectRoute","console","log","user","found","map","oneUser","id","alert","handleSignUp","method","body","JSON","stringify","headers","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n    const [users, setUsers] = useState(null)//temporary til we get connected to a db\r\n\r\n    const[password, setPassword] = useState('')\r\n    const[username, setUsername] = useState('')\r\n    const[newPassword, setNewPassword] = useState('')\r\n    const[newUsername, setNewUsername] = useState('')\r\n    const[isPending, setIsPending] = useState(false)\r\n\r\n    const history = useNavigate()\r\n\r\n    useEffect(() => {//collects all current account for later comparison\r\n        fetch('http://localhost:8000/users').then(response => response.json()).then(data => {\r\n            setUsers(data);\r\n        })\r\n    }, [])\r\n    \r\n    const handleSignIn = (e) => {\r\n        e.preventDefault();\r\n        setIsPending(true)\r\n        var foundId = 0;\r\n        var redirectRoute = \"\"\r\n        console.log(\"Should be all users\", users)\r\n        const user = {username, password}\r\n        var found = 0;\r\n        console.log(\"User will be signed in if pword and username is correct\");\r\n        //will take in text from credentials field and compare to users array\r\n        {users && users.map((oneUser) => {\r\n            console.log(\"Should be single user's credentials in db\", oneUser.password, oneUser.username)\r\n            console.log(\"Should be new user credentials\", user.username, user.password)\r\n            if(password === oneUser.password || username === oneUser.username){\r\n                foundId = oneUser.id\r\n                if(!found){\r\n                    found = 1;\r\n                }\r\n            }\r\n        })}\r\n        if(found){//needs route change\r\n            console.log(users);\r\n            redirectRoute = redirectRoute+foundId\r\n            //return(<Navigate replace to = {redirectRoute}/>)\r\n        }\r\n        else{\r\n            alert(\"Username or password is incorrect\")\r\n        }\r\n        found = 0;\r\n        setIsPending(false)\r\n}\r\n\r\n    const handleSignUp = (e) => {\r\n        e.preventDefault();\r\n        setIsPending(true)\r\n        const user = {username, password}\r\n        var found = 0;\r\n        {users && users.map((oneUser) => {\r\n            //console.log(\"Should be single user in db\", oneUser)\r\n            //console.log(\"Should be new user\", user)\r\n            if(newPassword === oneUser.password || newUsername === oneUser.username){\r\n                if(!found){\r\n                    //pop up\r\n                    alert(\"Username or password is already taken\")\r\n                    found = 1;\r\n                }\r\n            }\r\n        })}\r\n        //console.log(users)\r\n        if(!found){\r\n            user.username = newUsername\r\n            user.password = newPassword\r\n            fetch('http://localhost:8000/users', {\r\n            method: 'POST', \r\n            body: JSON.stringify(user),\r\n            headers: {'Content-Type': 'application/json'}\r\n        }).then(() => {\r\n                console.log(users); //maybe display something here\r\n            })\r\n            fetch('http://localhost:8000/users').then(response => response.json()).then(data => {\r\n            setUsers(data);//seems to be a problem with new users not being registered?    \r\n        })\r\n        }\r\n        found = 0;\r\n        setIsPending(false)\r\n    }\r\n\r\n    return (  \r\n        <div className=\"home\">\r\n            <h2>Sign In Page</h2>\r\n            <form onSubmit = {handleSignUp}>\r\n                <label>Username</label>\r\n                <input \r\n                    type = \"text\"\r\n                    required\r\n                    value = {newUsername}\r\n                    onChange = {(e) => setNewUsername(e.target.value)}\r\n                >\r\n                </input>\r\n                <label>Password</label>\r\n                <input \r\n                    type = \"text\"\r\n                    required\r\n                    value = {newPassword}\r\n                    onChange = {(e) => setNewPassword(e.target.value)}\r\n                >\r\n                </input>\r\n                {!isPending && <button>Sign Up</button>}\r\n                {isPending && <button disabled>Adding user...</button>}\r\n            </form>\r\n            <form onSubmit = {handleSignIn}>\r\n                <label>Username</label>\r\n                <input \r\n                    type = \"text\"\r\n                    required\r\n                    value = {username}\r\n                    onChange = {(e) => setUsername(e.target.value)}\r\n                >\r\n                </input>\r\n                <label>Password</label>\r\n                <input \r\n                    type = \"text\"\r\n                    required\r\n                    value = {password}\r\n                    onChange = {(e) => setPassword(e.target.value)}\r\n                >\r\n                </input>\r\n                {!isPending && <button>Sign In</button>}\r\n                {isPending && <button disabled>Adding user...</button>}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Home;"]},"metadata":{},"sourceType":"module"}